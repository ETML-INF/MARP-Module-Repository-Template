name: Build Slides (MARP)

on:
  push:
    branches: [ "main" ]
    paths:
      - "b-UnitesEnseignement/Presentations/*.md"
      - "b-UnitesEnseignement/Presentations/style/**"
      - ".github/workflows/slides.yml"
  workflow_dispatch:

concurrency:
  group: slides-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      ICT_MODULE: ${{ vars.ICT_MODULE }}
    steps:
      - name: Check ICT_MODULE
        run: |
          if [ -z "${ICT_MODULE}" ]; then
            REPO_URL="https://github.com/${GITHUB_REPOSITORY}/settings/secrets/actions"
            echo "::error::❌ ICT_MODULE non défini. Configurez-le dans Settings → Actions → Variables."
            echo "🔗 [Ouvrir la configuration des variables](${REPO_URL})"
            exit 1
          else
            echo "✅ ICT_MODULE=${ICT_MODULE}"
          fi

      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install marp-cli
        run: npm i -g @marp-team/marp-cli

      - name: Build slides (HTML + PDF)
        run: |
          set -euo pipefail
          SRC_DIR="b-UnitesEnseignement/Presentations"
          OUT_HTML="${SRC_DIR}/dist/html"
          OUT_PDF="${SRC_DIR}/dist/pdf"
          mkdir -p "${OUT_HTML}" "${OUT_PDF}"

          shopt -s nullglob
          FILES=(${SRC_DIR}/*.md)
          if [ ${#FILES[@]} -eq 0 ]; then
            echo "::warning::Aucun fichier .md trouvé dans ${SRC_DIR}/"
          fi

          for f in "${FILES[@]}"; do
            base="$(basename "${f%.md}")"
            echo "➡️  Compile ${base}.md"
            # HTML
            marp "${f}" --html --allow-local-files \
              --output "${OUT_HTML}/${base}.html"
            # PDF
            marp "${f}" --pdf --allow-local-files \
              --output "${OUT_PDF}/${base}.pdf"
          done

          ROOT_INDEX="b-UnitesEnseignement/Presentations/index.php"
          if [ -f "${ROOT_INDEX}" ]; then
            echo "ℹ️  index.php détecté → copie dans ${OUT_HTML}/"
            cp "${ROOT_INDEX}" "${OUT_HTML}/index.php"
          else
            echo "ℹ️  Aucun index.php à la racine de Presentations/"
          fi

      - name: Upload slides artifact
        uses: actions/upload-artifact@v4
        with:
          name: slides-site
          path: |
            b-UnitesEnseignement/Presentations/dist/**
            b-UnitesEnseignement/Presentations/style
          retention-days: 7

  web-deploy:
    needs: build
    name: 🎉 Deploy
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: slides-site
          path: site

      # 1) dist/html (pages) -> ${FTP_PRESENTATIONS_DIR}/
      - name: 📂 Sync HTML deck(s)
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ vars.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: ftps
          port: 21
          local-dir: site/dist/html/
          server-dir: ${{ vars.ICT_ROOT_FOLDER }}/${{ vars.ICT_MODULE}}/${{ vars.FTP_PRESENTATIONS_DIR }}/
          state-name: .ftp-sync-html.json
          log-level: minimal
          timeout: 120000

      # 2) dist/pdf (export) -> ${FTP_PRESENTATIONS_DIR}/pdf/
      - name: 📂 Sync PDF export(s)
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ vars.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: ftps
          port: 21
          local-dir: site/dist/pdf/
          server-dir: ${{ vars.ICT_ROOT_FOLDER }}/${{ vars.ICT_MODULE}}/${{ vars.FTP_PRESENTATIONS_DIR }}/pdf/
          state-name: .ftp-sync-pdf.json
          log-level: minimal
          timeout: 120000

      # 3) style (optionnel, sans sources .xcf) -> ${FTP_PRESENTATIONS_DIR}/style/
      - name: 📂 Sync style
        if: ${{ hashFiles('site/style/**') != '' }}
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ vars.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: ftps
          port: 21
          local-dir: site/style/
          server-dir: ${{ vars.ICT_ROOT_FOLDER }}/${{ vars.ICT_MODULE}}/${{ vars.FTP_PRESENTATIONS_DIR }}/style/
          state-name: .ftp-sync-style.json
          log-level: minimal
          exclude: |
            **/*.xcf
          timeout: 120000
